---
# SPDX-License-Identifier: Apache-2.0
# Copyright Contributors to the Egeria project


# To run
#   * Ensure Docker is installed and running
#   * Start Egeria Platform stack from the 'coco-lab-docker-compose' folder using:
#     'docker compose -f ./coco-lab-setup.yaml up --build'
#   * Subsequent startups can be performed without the '--build' at the end
#   * Uninstall the containers by issuing 'docker compose -f ./coco-lab-setup.yaml down'
#
# Assumptions:
#   * Ports 7443, 7444, 7445 and 9192 are available on the host system - these are the default ports for Kafka and Egeria.
#   * by default, the jupyter notebooks in the 'coco-jupyter-labs' folder are mounted and available for use by the jupyter noteboos
#   * by default, strict SSL validation is turned off
#
#

services:
    jupyter-hub:
        depends_on:
            egeria-core:
                condition: service_healthy
            egeria-datalake:
                condition: service_healthy
            egeria-dev:
                condition: service_healthy

        image: quay.io/jupyter/minimal-notebook
        container_name: jupyter
        ports:
            - 9888:8888
        environment:
            JUPYTER_ENABLE_LAB: "yes"
            JUPYTER_TOKEN: "egeria"
        build:
            dockerfile: Dockerfile

        volumes:
            - ../coco-jupyter-labs/:/home/jovyan/egeria-labs
            - ./before-notebook.d:/usr/local/bin/before-notebook.d
          #  - ./coco-lab-docker-compose:/home/jovyan/scripts

    kafka:
         image: 'bitnami/kafka:latest'
         ports:
             - '9192:9192'

         environment:
             - KAFKA_CFG_NODE_ID=0
             - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
             - KAFKA_CFG_PROCESS_ROLES=controller,broker
             - KAFKA_CFG_LISTENERS=PLAINTEXT://:9192,CONTROLLER://:9193
             - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
             - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9193
             - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

    egeria-core:
        depends_on:
            - kafka
        image: 'docker.io/odpi/egeria-platform:stable'
        ports:
            - '7443:7443'

        environment:
            - XTDB_ENABLE_BYTEUTILS_SHA1=True
            - XTDB_DISABLE_LIBCRYPTO=True
            - startup.server.list=
            - server.port=7443
        healthcheck:
            test:  curl -k -X GET "https://localhost:7443/open-metadata/platform-services/users/garygeeke/server-platform/origin" || exit 1
            interval: 20s
            timeout: 10s
            retries: 3
            start_period: 10s
            start_interval: 5s

        #        volumes:
        #            - "YOUR DATA DIRECTORY"/data:/deployments/data
        #            - "YOUR EXTRA LIBRARY DIRECTORY"/extra:/deployments/extra
        #            - "ANOTHER DIRECTOR TO MOUNT"/:/deployments/user_mount
    egeria-datalake:
        depends_on:
            - kafka

        image: 'docker.io/odpi/egeria-platform:stable'
        ports:
            - '7444:7444'

        environment:
            - XTDB_ENABLE_BYTEUTILS_SHA1=True
            - XTDB_DISABLE_LIBCRYPTO=True
            - startup.server.list=
            - server.port=7444
        healthcheck:
            test: curl -k -X GET "https://localhost:7444/open-metadata/platform-services/users/garygeeke/server-platform/origin" || exit 1
            interval: 20s
            timeout: 10s
            retries: 3
            start_period: 10s
            start_interval: 5s

    egeria-dev:
        depends_on:
            - kafka

        image: 'docker.io/odpi/egeria-platform:stable'
        ports:
            - '7445:7445'
        environment:
            - XTDB_ENABLE_BYTEUTILS_SHA1=True
            - XTDB_DISABLE_LIBCRYPTO=True
            - startup.server.list=
            - server.port=7445
        healthcheck:
            test: curl -k -X GET "https://localhost:7445/open-metadata/platform-services/users/garygeeke/server-platform/origin" || exit 1
            interval: 20s
            timeout: 10s
            retries: 3
            start_period: 10s
            start_interval: 5s


#
# Change external to true and create volumes manually if you wish to persist between runs
#
volumes:
    zookeeper-data:
        external: false
    kafka-data:
        external: false
    db_home:
        external: false
